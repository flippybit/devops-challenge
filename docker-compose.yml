services:
  db:
    image: postgres:12.8
    environment:
      POSTGRES_PASSWORD: password
      platform: "linux/${CPU_ARCH-amd64}"
    ports:
      - "5432:5432"
    volumes:
      - api-db:/var/lib/postgresql/data

  redis:
    image: redis:7.0.8

  api:
    image: code-challenge_api:latest  # Explicitly name the image
    tty: true
    stdin_open: true
    build:
      context: .
      dockerfile: Dockerfile.rails
    platform: "linux/${CPU_ARCH-amd64}"
    volumes:
      - ./api:/app
    ports:
      - "3000:3000"
    command: bundle exec rails server -b 0.0.0.0
    environment:
      REDIS_URL: 'redis://redis:6379/1'
      DB_HOST: db
      DB_USER: postgres
      DB_PASS: password
    depends_on:
      - db
      - redis

  sidekiq:
    image: code-challenge_sidekiq:latest  # Explicitly name the image
    build:
      context: .
      dockerfile: Dockerfile.rails
    volumes:
      - ./api:/app
    platform: "linux/${CPU_ARCH-amd64}"
    entrypoint: bundle exec sidekiq -C config/sidekiq.yml
    environment:
      REDIS_URL: 'redis://redis:6379/1'
      DB_HOST: db
      DB_USER: postgres
      DB_PASS: password
    depends_on:
      - db
      - redis

  spa:
    image: code-challenge_spa:latest  # Explicitly name the image
    build:
      context: .
      dockerfile: Dockerfile.react
    platform: "linux/${CPU_ARCH-amd64}"
    volumes:
      - ./spa:/app
      - /app/node_modules
    ports:
      - "4000:4000"
    depends_on:
      - api

  nginx:
    image: code-challenge_nginx:latest  # Explicitly name the image
    build:
      context: .
      dockerfile: ./Dockerfile.nginx
    platform: "linux/${CPU_ARCH-amd64}"
    ports:
      - "8000:8000"
    links:
      - api
      - spa

volumes:
  api-db:
